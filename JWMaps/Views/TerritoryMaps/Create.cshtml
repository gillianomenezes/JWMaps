@model JWMaps.ViewModel.TerritoryMapViewModel

@{
    ViewBag.Title = "Criando o mapa";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Como será o mapa?</h2>

<div>
    <div class="form-group">
        <label>Tipo de endereço</label>
        @Html.EnumDropDownListFor(m => m.Category, "-- Selecione um tipo de endereço --", new { @class = "form-control", @selected="selected" })
        @Html.ValidationMessageFor(m => m.Category)
    </div>
    <div id="suggestion"></div>
    <div class="form-group" id="neighbourhood-div">
        <label>Bairro</label>
        <select class="form-control" id="TerritoryMap_Neighbourhood" name="TerritoryMap.Neighbourhood"></select>
    </div>

    <div id="divLoading">
    </div>

    <button id="create-map-btn" type="submit" class="btn btn-primary" @*onclick='showLoading(); newMap();'*@>Criar!</button>
</div>
<br />
<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section scripts
{
    <script type="text/javascript" language="javascript">
        $(document).ready(function () {            
            main();
        });

        function main() {
            $("#neighbourhood-div").hide();
            $("#create-map-btn").hide();
            setDefaultSelectedCategory();
            $("#create-map-btn").on("click", function () {
                showLoading();
                newMap();
            });

            $("#Category").change(function () {
                var mapType = $("#Category").find(":selected").text();
                $("#TerritoryMap_Neighbourhood").empty();

                onMapCategoryOptionSelected(mapType);
            })
        }

        function setDefaultSelectedCategory() {
            //$("#Category selectz").sele
        }

        function onMapCategoryOptionSelected(mapType) {
            $.ajax({
                    url: "@Url.Action("GetNeighbourhoodByMapType", "TerritoryMaps")",
                    type: "POST",
                    data: { 'maptype': mapType },
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                        if (response.success) {
                            showSelect(response.territoryMapViewModel.Neighbourhoods);
                            showSuggestedNeighbourhoods(response.territoryMapViewModel.NeighbourhoodsSuggestion);
                        }
                        else {
                            hideSelect();
                        }
                    },
                    error: function (xhr, status, exception) {
                        console.log("Error: " + exception + ", Status: " + status);
                    }
            });
        }

        function showSelect(neighbourhoods) {
            $("#neighbourhood-div").fadeIn();
            setTimeout(function () { $("#create-map-btn").fadeIn() }, 500);

            $.each(neighbourhoods, function (index, neighbourhood) {
                $("#TerritoryMap_Neighbourhood").append($('<option>', { value: index, text: neighbourhood}))
            })
        }

        function hideSelect() {
            $("#neighbourhood-div").fadeOut();
            setTimeout(function () { $("#create-map-btn").fadeOut() }, 500);
        }

        function showLoading() {
            $("div#divLoading").addClass('show');
        }

        function showSuggestedNeighbourhoods(suggestedNeighbourhoods) {
            $("#suggestion").empty();
            var $label = $("<label>").text("Bairros sugeridos");
            var $ul = $("<ul>");
            
            $("#suggestion").append($label);
            $("#suggestion label").after($ul);

            suggestedNeighbourhoods.forEach(function (suggestion) {
                $ul.append($("<li>" + suggestion + "</li>"))
            });
        }

        function newMap() {
            $.ajax({
                url: "@Url.Action("New", "TerritoryMaps")",
                type: "POST",
                data: {
                    "TerritoryMapViewModel": {
                        "selectedNeighbourhood": $("#TerritoryMap_Neighbourhood option:selected").text(),
                        "Category" : getCategory($("#Category option:selected").text())
                    }
                },
                async: false,
                dataType: "json",
                succes: window.location.replace("../territoryMaps")
            });
        }

        function getCategory(text) {
            if (text == "Comercial") {
                return "Business";
            }
            else if (text == "Residência") {
                return "House";
            }
        }
    </script>
}