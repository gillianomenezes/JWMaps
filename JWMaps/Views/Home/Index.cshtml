@model JWMaps.ViewModel.DashboardViewModel
@{
    ViewBag.Title = "Home";
}

<div id="wrapper">
    <div id="map" class="jumbotron" style="width: 95%; height: 432px" />        
</div>

<div id="legend"><h3>Legenda</h3></div>

<div id="statistics">
    <ul>
        <li>Total de não-estudantes: @Model.Householders.Count(h => h.PublisherId == null)</li>
        <li>Total de estudantes: @Model.Householders.Count(h => h.PublisherId != null)</li>
        <li>Total geral: @Model.Householders.Count</li>
    </ul>
</div>

@section scripts
{
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyCDXPe6iLZmeOYItmk84ZuV7wVJ_vSQQQs&sensor=false"></script>
    <script type="text/javascript" language="javascript">
        $(document).ready(function () {

            function initMap() {

                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 17
                });

                var bounds = new google.maps.LatLngBounds();
                var iconBase = 'http://maps.google.com/mapfiles/ms/icons/';
                var icons = {
                    comercial: {
                        name: 'Negócios',
                        icon: iconBase + 'green.png'
                    },
                    student: {
                        name: 'Estudante',
                        icon: iconBase + 'blue.png'
                    },
                    nonStudent: {
                        name: 'Não estudante',
                        icon: iconBase + 'red.png'
                    }
                };

                @foreach(var householder in Model.Householders)
                {
                    <text>

                    @if (householder.PublisherId != null)
                    {
                        <text> var icon = icons.student.icon; </text>
                    }
                    else if(householder.Category == JWMaps.Models.Category.Business)
                    {
                        <text> var icon = icons.comercial.icon </text>
                    }
                    else 
                    {
                        <text> var icon = icons.nonStudent.icon; </text>
                    }
                
                    var marker = new google.maps.Marker({
                        position: new google.maps.LatLng(@householder.Latitude.ToString().Replace(',', '.') , @householder.Longitude.ToString().Replace(',', '.')),
                        map: map,
                        title: "name",
                        icon: icon,
                        animation: google.maps.Animation.DROP
                    });
                
                    bounds.extend(marker.getPosition());
                
                    </text>
                }

                var legend = document.getElementById('legend');
                for (var key in icons) {
                    var type = icons[key];
                    var name = type.name;
                    var icon = type.icon;
                    var div = document.createElement('div');
                    div.innerHTML = '<img src="' + icon + '"> ' + name;
                    legend.appendChild(div);
                }

                map.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(legend);
                map.fitBounds(bounds);

            } google.maps.event.addDomListener(window, 'load', initMap);
        })
    </script>
}